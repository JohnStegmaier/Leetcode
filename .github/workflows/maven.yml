# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'oracle'
        cache: maven

    # Step 1: Run tests on every pull request
    - name: Run tests
      run: mvn clean test

    # Step 2: Package the code after a PR merge
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml

    # Step 3: Create a release if version does not end with -SNAPSHOT
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') || !contains(github.ref, '-SNAPSHOT')
      run: |
        mvn versions:set -DnewVersion=${{ github.event.release.tag_name }}
        mvn clean deploy --settings .github/maven-settings.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
